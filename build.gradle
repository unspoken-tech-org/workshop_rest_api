plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.8'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.tproject'
version = '1.0.1'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.slf4j:slf4j-api:2.0.11'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.16.1'
    implementation 'net.lingala.zip4j:zip4j:2.11.5'
    implementation 'commons-io:commons-io:2.15.1'
    implementation 'dev.mccue:guava-base:0.0.4'
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    implementation 'com.github.spullara.mustache.java:compiler:0.9.11'
    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'org.simpleflatmapper:sfm-springjdbc:8.2.3'
    implementation 'org.simpleflatmapper:sfm-jdbc:8.2.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation("org.flywaydb:flyway-core:11.11.0")
    implementation("org.flywaydb:flyway-database-postgresql:11.11.0")
    compileOnly 'org.projectlombok:lombok:1.18.30'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('integrationTests', Test) {
    group = "tproject"
    description = 'Runs the integration tests.'
    useJUnitPlatform() {
        includeTags("integration")
        excludeTags("unit")
        excludeTags("swagger")
    }

}
