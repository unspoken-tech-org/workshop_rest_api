create table if not exists colors(
id integer primary key generated by default as identity not null,
color varchar(50) not null
);

create table if not exists devices(
id integer primary key generated by default as identity not null,
id_customer int not null,
id_brand_model_type int not null,
device_status varchar(255) not null,
id_technician int,
entry_date timestamp not null,
departure_date timestamp,
problem varchar not null,
observation varchar,
budget varchar,
labor_value NUMERIC(15,2),
service_value NUMERIC(15,2),
labor_value_collected boolean default false,
color_ids INTEGER[] not null,
has_urgency boolean not null,
is_revision boolean not null,
last_update timestamp,
last_viewed_at TIMESTAMP
);


create table if not exists customers(
id integer primary key generated by default as identity not null,
name varchar not null,
insert_date timestamp not null,
cpf varchar not null,
gender varchar not null,
email varchar
);

create table if not exists brands(
id integer primary key generated by default as identity not null,
brand varchar not null
);

create table if not exists models (
id integer primary key generated by default as identity not null,
model varchar not null
);

create table if not exists technicians(
id integer primary key generated by default as identity not null,
technician_name varchar not null,
number varchar not null
);

create table if not exists types(
id integer primary key generated by default as identity not null,
type varchar not null
);

create table if not exists brands_models_types(
id integer primary key generated by default as identity not null,
id_brand int not null,
id_model int not null,
id_type int not null
);

create table if not exists customer_contact(
id integer primary key generated by default as identity not null,
id_device int not null,
id_technician int not null,
phone varchar,
device_status varchar(255) not null,
type varchar not null,
has_made_contact bool not null default false,
last_contact timestamp not null,
conversation varchar
);

create table if not exists phones(
id integer primary key generated by default as identity not null,
id_customer int,
name varchar,
number varchar not null,
is_main boolean not null
);


create table if not exists payments(
id integer primary key generated by default as identity not null,
id_device int not null,
payment_date timestamp not null,
payment_type varchar not null,
payment_value NUMERIC(15,2) not null,
category varchar not null
);


create table if not exists device_history(
id integer primary key generated by default as identity not null,
id_device int not null,
history_date timestamp not null default now(),
field_name varchar not null,
old_value varchar not null,
new_value varchar not null,
constraint fk_device_history_devices foreign key(id_device) references devices(id)
);

--------- Foreign keys

-- devices
alter table devices add constraint fk_devices_customers foreign key (id_customer) references customers(id);

alter table devices add constraint fk_devices_BrandModelType foreign key (id_brand_model_type) references brands_models_types(id);

alter table devices add constraint fk_devices_technician foreign key (id_technician) references technicians(id);

-- brands_models_types
alter table brands_models_types add constraint fk_brands_models_types_types foreign key (id_type) references types(id);
alter table brands_models_types add constraint fk_brands_models_types_brand foreign key (id_brand) references brands(id);
alter table brands_models_types add constraint fk_brands_models_types_model foreign key (id_model) references models(id);



-- customer_contact
alter table customer_contact add constraint fk_customer_contact_devices foreign key (id_device) references devices(id);

alter table customer_contact add constraint fk_customer_contact_technicians foreign key (id_technician) references technicians(id);

-- phones
alter table phones add constraint fk_phones_customers foreign key (id_customer) references customers(id);

-- payments
alter table payments add constraint fk_payments_devices foreign key (id_device) references devices(id);
