CREATE table if not exists devices_colors(
id integer primary key generated by default as identity not null,
id_device int NOT NULL,
id_color int NOT NULL 
);

create table if not exists colors(
id integer primary key generated by default as identity not null,
color varchar(50) not null
);

create table if not exists devices(
id integer primary key generated by default as identity not null,
id_customer int not null,
id_brand_model_type int not null,
id_device_status int not null,
id_technician int not null,
entry_date timestamp not null,
departure_date timestamp,
problem varchar not null,
observation varchar,
budget varchar,
labor_value NUMERIC(15,2),
has_urgency boolean not null,
last_update timestamp
);


create table if not exists customers(
id integer primary key generated by default as identity not null,
name varchar not null,
insert_date timestamp not null,
cpf varchar not null,
gender char not null,
email varchar,
phone varchar not null,
whatsapp varchar
);


create table if not exists device_status(
id integer primary key generated by default as identity not null,
status varchar not null
);

create table if not exists brands(
id integer primary key generated by default as identity not null,
brand varchar not null
);

create table if not exists models (
id integer primary key generated by default as identity not null,
model varchar not null
);

create table if not exists technicians(
id integer primary key generated by default as identity not null,
technician varchar not null,
number varchar not null
);

create table if not exists types(
id integer primary key generated by default as identity not null,
type varchar not null
);

create table if not exists brands_models_types(
id integer primary key generated by default as identity not null,
id_brand int not null,
id_model int not null,
id_type int not null
);

create table if not exists customer_contact(
id integer primary key generated by default as identity not null,
id_device int not null,
id_technician int not null,
id_phone int,
id_device_status int not null,
type varchar not null,
call_status varchar,
last_contact timestamp not null,
conversation varchar
);

create table if not exists phones(
id integer primary key generated by default as identity not null,
id_customer int,
number varchar not null,
whats boolean not null,
type varchar not null
);

create table if not exists items(
id integer primary key generated by default as identity not null,
id_device int not null,
id_product int not null,
item varchar not null,
item_value NUMERIC(15,2) not null,
quantity int not null
);

create table if not exists payments_devices(
id integer primary key generated by default as identity not null,
id_device int not null,
id_payment int not null
);

----------- Sells
create table if not exists purchases_products(
id integer primary key generated by default as identity not null,
id_buying int,
id_product int,
unit_value int,
quantity int,
subTotal NUMERIC(15,2)
);


create table if not exists products(
id integer primary key generated by default as identity not null,
id_category int,
id_brand_model_type int,
product varchar,
description varchar,
value_buying NUMERIC(15,2),
selling_value NUMERIC(15,2),
supply int,
status boolean,
min_supply int
);


create table if not exists suppliers(
id integer primary key generated by default as identity not null,
supplier varchar,
phone varchar,
whatsapp varchar,
email varchar
);

create table if not exists purchases(
id integer primary key generated by default as identity not null,
id_supplier int,
data_buying timestamp,
purchase varchar,
total_value NUMERIC(15,2),
shipping_value NUMERIC(15,2),
invoice varchar
);


create table if not exists categories(
id integer primary key generated by default as identity not null,
category varchar
);

create table if not exists sales(
id integer primary key generated by default as identity not null,
id_customer int,
id_seller int,
sale_date timestamp,
invoice_type varchar,
invoice_number varchar,
total NUMERIC(15,2),
paid_total NUMERIC(15,2),
sell_type varchar
);

create table if not exists sellers(
id integer primary key generated by default as identity not null,
name varchar,
email varchar,
phone varchar,
whatsapp varchar,
gender char
);

create table if not exists products_sales(
id integer primary key generated by default as identity not null,
id_sell int,
id_product int,
sell_value NUMERIC(15,2),
quantity int,
subTotal NUMERIC(15,2)
);

create table if not exists payments(
id integer primary key generated by default as identity not null,
payment_date timestamp not null,
payment_type varchar not null,
payment_value NUMERIC(15,2) not null,
category varchar not null
);

create table if not exists sales_payments(
id integer primary key generated by default as identity not null,
id_sell int,
id_payment int
);

--------- Foreign keys
--devices_colors
alter table devices_colors add constraint fk_devices_colors_devices foreign key (id_device) references devices(id);
alter table devices_colors add constraint fk_devices_colors_colors foreign key (id_color) references colors(id);

-- devices
alter table devices add constraint fk_devices_customers foreign key (id_customer) references customers(id);

alter table devices add constraint fk_devices_BrandModelType foreign key (id_brand_model_type) references brands_models_types(id);

alter table devices add constraint fk_devices_device_status foreign key (id_device_status) references device_status(id);

alter table devices add constraint fk_devices_technician foreign key (id_technician) references technicians(id);

-- brands_models_types
alter table brands_models_types add constraint fk_brands_models_types_types foreign key (id_type) references types(id);
alter table brands_models_types add constraint fk_brands_models_types_brand foreign key (id_brand) references brands(id);
alter table brands_models_types add constraint fk_brands_models_types_model foreign key (id_model) references models(id);



-- customer_contact
alter table customer_contact add constraint fk_customer_contact_devices foreign key (id_device) references devices(id);

alter table customer_contact add constraint fk_customer_contact_technicians foreign key (id_technician) references technicians(id);

alter table customer_contact add constraint fk_customer_contact_phones foreign key (id_phone) references phones(id);

alter table customer_contact add constraint fk_customer_contact_device_status foreign key (id_device_status) references device_status(id);

-- phones
alter table phones add constraint fk_phones_customers foreign key (id_customer) references customers(id);

-- items
alter table items add constraint fk_items_devices foreign key (id_device) references devices(id);

alter table items add constraint fk_items_products foreign key (id_product) references products(id);



-- purchases_products
alter table purchases_products add constraint fk_purchases_products_purchase foreign key (id_buying) references purchases(id);

alter table purchases_products add constraint fk_purchases_products_products foreign key (id_product) references products(id);

-- products
alter table products add constraint fk_products_category foreign key (id_category) references categories(id);

alter table products add constraint fk_products_brandModelType foreign key (id_brand_model_type) references brands_models_types(id);

-- purchases
alter table purchases add constraint fk_purchases_suppliers foreign key (id_supplier) references suppliers(id);


-- sales
alter table sales add constraint fk_sales_customers foreign key (id_customer) references customers(id);

alter table sales add constraint fk_sales_sellers foreign key (id_seller) references sellers(id);

-- products_sales
alter table products_sales add constraint fk_products_sales_sales foreign key (id_sell) references sales(id);

alter table products_sales add constraint fk_products_sales_products foreign key (id_product) references products(id);

-- payments_devices
alter table payments_devices add constraint fk_payments_devices_devices foreign key (id_device) references devices(id);
alter table payments_devices add constraint fk_payments_devices_payments foreign key (id_payment) references payments(id);

-- sales_payments
alter table sales_payments add constraint fk_sales_payments_sale foreign key (id_sell) references sales(id);
alter table sales_payments add constraint fk_sales_payments_payments foreign key (id_payment) references payments(id);
